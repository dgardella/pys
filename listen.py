import http.server
import socketserver
import time
from urllib.parse import urlparse
from urllib.parse import parse_qs

class MyHttpRequestHandler(http.server.SimpleHTTPRequestHandler):
    def do_GET(self):
        # Sending an '200 OK' response
        self.send_response(200)

        # Setting the header
        self.send_header("Content-type", "text/html")

        # Whenever using 'send_header', you also have to call 'end_headers'
        self.end_headers()

        # Extract query param
        name = 'World'
        
                # Some custom HTML code, possibly generated by another function
        html = f"<html><head></head><body><h1>Hello {name}!</h1></body></html>"

        # Writing the HTML contents with UTF-8
        self.wfile.write(bytes(html, "utf8"))

        return
        import time as t
        ##this will enable to utilize specified functions within time library such as sleep()
        ##Asking user the duration for which the user wants to delay the process
        seconds = 10
        ##Let's use a ranged loop to create the counter
        for i in range(seconds):
            print(str(seconds-i) + " seconds remaining \n")
            ##we also need the loop to wait for 1 second between each iteration
            t.sleep(1)
        print("Time is up")
        #return

# Create an object of the above class
handler_object = MyHttpRequestHandler

PORT = 8080
my_server = socketserver.TCPServer(("", PORT), handler_object)

# Star the server
my_server.serve_forever()